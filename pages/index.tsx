import type { NextPage } from 'next'
import Head from 'next/head'
import React from 'react'
import { useInterval } from './helpers/useInterval'

const Home: NextPage = () => {
  const [rotate, setRotate] = React.useState<number>(0);
  const [ghostX, setGhostX] = React.useState<number>(0);
  const [ghostY, setGhostY] = React.useState<number>(0);
  const [CX, setCX] = React.useState<number>(0);
  const [CY, setCY] = React.useState<number>(0);
  React.useEffect((): void => {
    window.addEventListener("mousemove", (e) => {setCX(e.clientX); setCY(e.clientY);});
  }, []);
  useInterval(function() {
    setRotate((_ => {
      console.log(CX, CY, ghostX, ghostY, rotate);
      setGhostY(ghostY => {
        return Math.abs(ghostY + 10 * Math.sin(rotate));
      });
      setGhostX(ghostX => {
        return Math.abs(ghostX + 10 * Math.cos(rotate));
      });
      if (((CX - ghostX) > 0) && (CY - ghostY) > 0) {
        return Math.atan((CY)/(CX)) * 180 / Math.PI;
      } else if (((CX - ghostX) < 0) && (CY - ghostY) > 0) {
        return Math.atan((CY)/(CX)) * 180 / Math.PI + 90;
      } else if (((CX - ghostX) < 0) && (CY - ghostY) < 0) {
        return Math.atan((CY)/(CX)) * 180 / Math.PI + 180;
      } else if (((CX - ghostX) > 0) && (CY - ghostY) < 0) {
        return Math.atan((CY)/(CX)) * 180 / Math.PI - 90;
      } else {
        return 0;
      }
    })());
  }, 50);
  function handleMouseOver(e: React.MouseEvent<HTMLDivElement, MouseEvent>): void {
    alert("Game Over!");
  }
  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <img onMouseOver={handleMouseOver} src="/ghost.png" width={100} height={100} style={{position: "fixed", top: `${ghostY}px`, left: `${ghostX}px`, transform: `rotate(${rotate}deg)`}} />
    </div>
  )
}

export default Home
